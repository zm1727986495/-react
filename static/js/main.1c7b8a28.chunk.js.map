{"version":3,"sources":["api/fetch.js","views/home/home.js","api/home/home.js","App.js","serviceWorker.js","index.js"],"names":["service","axios","create","widthCredentials","defaults","interceptors","request","use","config","headers","error","console","log","Promise","reject","Home","props","getAudio","mid","params","g_tk","loginUin","hostUin","format","inCharset","outCharset","notice","platform","needNewCode","data","fetch","url","method","then","res","req_0","code","mp3","sip","midurlinfo","purl","setState","audioSrc","textAudio","play","getData","page","limit","status","client_search_cp","ct","qqmusic_ver","new_json","remoteplace","searchid","t","aggr","cr","catZhida","lossless","flag_qc","p","n","w","state","inpVal","zhida","type","datas","zhida_singer","hotsong","tableData","accuracy","song","list","search","e","keyCode","handelChange","val","getSearch","is_xml","key","innhtml","this","ulLIStyle","sear","display","li","cursor","height","audioSty","position","bottom","width","style","onKeyUp","onChange","placeholder","onClick","length","map","item","i","bind","songMID","songName","title","ref","audio","src","controls","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c7b8a28.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst service = axios.create({\r\n  // baseURL: process.env.BASE_API, // api的base_url\r\n  // timeout: 9500000 // 请求超时时间\r\n  widthCredentials: true\r\n});\r\naxios.defaults.widthCredentials = true;\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n  // Do something before request is sent\r\n\r\n    config.headers['Authorization'] = 'eyJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJoYW95aiIsInVzZXJJZCI6IjEiLCJuYW1lIjoi6YOd5rqQ6YeRIiwicG9zdElkIjoiMjE0NSIsInBvc3ROYW1lIjoi5a6h5Lu357uE6ZW_Iiwic3RvcmVJZCI6IjIwMiIsInN0b3JlTmFtZSI6IuS6rOWNgeaipuWkqeacqOmXqCIsIm9yZ2FuaXphdGlvbklkIjoxOTgxLCJvcmdhbml6YXRpb25OYW1lIjoi5YyX5Lqs5aSn5Yy6Iiwib3JnYW5pemF0aW9uSWRCeVByZXNlbnQiOiIyMjQyIiwib3JnYW5pemF0aW9uTmFtZUJ5UHJlc2VudCI6IuS6rOe6ouapsSIsImRhdGFQZXJtaXNzaW9uc1R5cGUiOiIwIiwiZXhwIjoxNTc2MjI5MTQ3fQ.iTagNWgJ73MjaHJvhekWVwTpcYZbNRg3AKxrBHYfXXnXmicIeqmWr41zwTwZs9TezEtwVaOP5uXhb8StGT4vkwFUPUmraEn9rIG4u53eM9gfx6fIsRrdANG_4tcFQF_7_sGoJ95cDsS8rrHjwxV4cAUw21HvS46lR4aTxdicDAk'; // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\r\n  \r\n  return config;\r\n}, error => {\r\n  // Do something with request error\r\n  console.log(error); // for debug\r\n  Promise.reject(error);\r\n})\r\n\r\nexport default service;","import React, { Component } from 'react';\r\nimport {listCustomerService,client_search_cp,search,audioFun} from '@api/home/home'\r\nimport { Input,Button } from 'element-react';\r\nimport 'element-theme-default';\r\n\r\n\r\nclass Home extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {tableData:[],inpVal:'',accuracy:'',innhtml:'',audioSrc:''};\r\n  }\r\n\r\n  //点击歌名播放歌曲\r\n  getAudio=mid=>{\r\n    let data = {\r\n      '-': 'getplaysongvkey8863583479930659',\r\n      g_tk: 600087168,\r\n      loginUin: 1727986495,\r\n      hostUin: 0,\r\n      format: 'json',\r\n      inCharset: 'utf8',\r\n      outCharset: 'utf-8',\r\n      notice: 0,\r\n      platform: 'yqq.json',\r\n      needNewCode: 0,\r\n      data: {\"req\":{\"module\":\"CDN.SrfCdnDispatchServer\",\"method\":\"GetCdnDispatch\",\"param\":{\"guid\":\"4300893668\",\"calltype\":0,\"userip\":\"\"}},\"req_0\":{\"module\":\"vkey.GetVkeyServer\",\"method\":\"CgiGetVkey\",\"param\":{\"guid\":\"4300893668\",\"songmid\":[mid],\"songtype\":[0],\"uin\":\"1727986495\",\"loginflag\":1,\"platform\":\"20\"}},\"comm\":{\"uin\":1727986495,\"format\":\"json\",\"ct\":24,\"cv\":0}}\r\n    }\r\n    audioFun(data).then(res=>{\r\n      if(res.data.req_0.code==0){\r\n        var mp3 = res.data.req_0.data.sip[0]+res.data.req_0.data.midurlinfo[0].purl;\r\n        this.setState({audioSrc:mp3})\r\n        this.textAudio.play();\r\n      }\r\n\r\n    })\r\n  }\r\n  //获取歌曲名字\r\n  getData=()=>{\r\n    let data = {\r\n      page: 1,\r\n      limit: 20\r\n    }\r\n    listCustomerService(data).then(res=>{\r\n      if(res.status == 200){\r\n        // this.setState({tableData:res.data.data.rows})\r\n      }\r\n    })\r\n\r\n\r\n    let mus = {\r\n      ct: 24,\r\n      qqmusic_ver: 1298,\r\n      new_json: 1,\r\n      remoteplace: 'txt.yqq.song',\r\n      searchid: 59568499194168183,\r\n      t: 0,\r\n      aggr: 1,\r\n      cr: 1,\r\n      catZhida: 1,\r\n      lossless: 0,\r\n      flag_qc: 0,\r\n      p: 1,\r\n      n: 10,\r\n      w: this.state.inpVal,\r\n      g_tk: 5381,\r\n      loginUin: 0,\r\n      hostUin: 0,\r\n      format: 'json',\r\n      inCharset: 'utf8',\r\n      outCharset: 'utf-8',\r\n      notice: 0,\r\n      platform: 'yqq.json',\r\n      needNewCode: 0\r\n    }\r\n    client_search_cp(mus).then(res=>{\r\n      console.log(res);\r\n      if(res.data.data.zhida.type==1){\r\n        let datas=res.data.data.zhida.zhida_singer.hotsong;\r\n        this.setState({tableData:datas,accuracy:1});\r\n      }else{\r\n        let datas=res.data.data.song.list\r\n        this.setState({tableData:datas,accuracy:2});\r\n      }\r\n    })\r\n    \r\n  }\r\n  //搜索歌曲\r\n  search=(e,type)=>{\r\n    if(type==1){\r\n      this.getData()\r\n      // this.getSearch(this.state.inpVal)\r\n    }else{\r\n      if(e.keyCode==13){\r\n        this.getData()\r\n        // this.getSearch(this.state.inpVal)\r\n      }\r\n    }\r\n    \r\n  }\r\n  //输入内容\r\n  handelChange = val =>{\r\n   this.setState({inpVal:val})\r\n  //  this.getSearch(val)\r\n  }\r\n\r\n  //输入内容调取接口\r\n  getSearch=(val)=>{\r\n    let data = {\r\n      is_xml: 0,\r\n      key:val,\r\n      g_tk: 5381,\r\n      loginUin: 0,\r\n      hostUin: 0,\r\n      format: 'json',\r\n      inCharset: 'utf8',\r\n      outCharset: 'utf-8',\r\n      notice: 0,\r\n      platform: 'yqq.json',\r\n      needNewCode: 0\r\n    }\r\n    search(data).then(res=>{\r\n      console.log(res);\r\n      \r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    let {tableData=[],accuracy,innhtml,audioSrc} = this.state;\r\n    let ulLIStyle = {\r\n      sear:{\r\n        display:'flex',\r\n      },\r\n      li:{\r\n        cursor: 'pointer',\r\n        height:'30px'\r\n      },\r\n      audioSty:{\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%'\r\n      }\r\n    }\r\n    \r\n    return (<div>\r\n     \r\n       <div style={ulLIStyle.sear}>\r\n        <Input style={{width:\"200px\"}} onKeyUp={this.search} onChange={this.handelChange} placeholder=\"请输入内容\" />\r\n        <Button type=\"primary\" style={{width:\"70px\"}} onClick={e=>this.search(e,1)}>搜索</Button>\r\n      </div>\r\n      {/* {innhtml} */}\r\n\r\n     {tableData.length?<ul>\r\n        {tableData.map((item,i)=>{\r\n          return <li style={ulLIStyle.li} key={i} onClick={this.getAudio.bind(this,item.songMID?item.songMID:item.mid)}>{accuracy==1?item.songName:item.title}</li>\r\n        })}\r\n      </ul>:<div>暂无数据</div>}\r\n\r\n      <div style={ulLIStyle.audioSty}>\r\n        <audio ref={audio => this.textAudio = audio} style={{width:'100%'}} src={audioSrc} controls=\"controls\"></audio>\r\n      </div>\r\n\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default Home;","import fetch from '@api/fetch'\r\n\r\nexport function listCustomerService(params){\r\n  return fetch({\r\n    url:'/api/pc/customerService/listCustomerService',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexport function client_search_cp(params){\r\n  return fetch({\r\n    url:'/qq/soso/fcgi-bin/client_search_cp',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexport function search(params){\r\n  return fetch({\r\n    url:'/qq/splcloud/fcgi-bin/smartbox_new.fcg',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\n\r\nexport function audioFun(params){\r\n  return fetch({\r\n    url:'/uqq/cgi-bin/musicu.fcg',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from '@views/home/home'  \nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render(){\n    return (<div>\n      <Home></Home>\n    </div>)\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}